<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>靶场 on F0rmat的博客 | 专注于网络攻防和信息安全</title>
    <link>https://getshe11.com/tags/%E9%9D%B6%E5%9C%BA/</link>
    <description>Recent content in 靶场 on F0rmat的博客 | 专注于网络攻防和信息安全</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 03 May 2018 17:04:29 +0000</lastBuildDate><atom:link href="https://getshe11.com/tags/%E9%9D%B6%E5%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用Vulnhub来练习漏洞靶场(爸爸再也不用担心我没有靶场练习了)</title>
      <link>https://getshe11.com/post/use-vulnhub-to-build-a-variety-of-hole-shooting-range-father-no-longer-have-to-worry-about-i-have-no-practice-range/</link>
      <pubDate>Thu, 03 May 2018 17:04:29 +0000</pubDate>
      
      <guid>https://getshe11.com/post/use-vulnhub-to-build-a-variety-of-hole-shooting-range-father-no-longer-have-to-worry-about-i-have-no-practice-range/</guid>
      <description>0x01 前言 Vulnhub它是一个提供各种漏洞环境的平台，里面大部分的环境是要用VMware或者VirtualBox打开运行的。 如果只是练习一些常见的漏洞可以看我另一篇用[Docker来搭建各种漏洞靶场(妈妈再也不用担心我没有靶场练习了)](https://getpass.cn/2018/03/14/Use Docker to build a variety of loopholes (my mother no longer has to worry about not having practiced in the shooting range)/)
0x02 下载 https://www.vulnhub.com 里面有各种各样的镜像，可以下载到自己的机子上面练习。 镜像的下载地址和描述、难度等级等 随便点击下载，有些需要FQ才能下载，推荐官网的下载地址。 作为测试，我就下载JIS-CTF: VulnUpload作为演示吧
Download (Mirror): https://download.vulnhub.com/jisctf/JIS-CTF-VulnUpload-CTF01.ova
0x03 安装 下载完后，解压出来，会看到一个ovf后缀的文件 打开VMware，点击打开，找到我们刚才解压的文件，选择ovf文件 选择存放的位置，然后点击导入 最后等待导入完成，导入速度看本机性能和镜像的大小 0x04 设置 导入完成后，我设置的网络模式是NAT的，因为我内网比较多机子，所以选择这个方便等下扫描。还有就是内存大小，如果本机内存小于4G的请修改内存到4G以下。 我们点击开启虚拟机，到开机的页面我们回车选择第二个Ubuntu的高级选项（如果启动有网络正常的话可以直接正常开机，如果网络不正常可以按下面步骤操作） 进到高级选项，我们再次回车选择第二个Linux内核版本的恢复模式 等待系统启动完毕后，看到这个页面，我们继续回车进入 回车后会弹出选择界面，我们选择root一行回车，然后再次回车进入命令行模式 输入命令查看所以的网卡：ifconfig -a 我的是ens33，然后继续输入命令 vi /etc/network/interface修改网络配置文件 修改这两个地方，改成你的网卡名称，然后ctrl+x保存，最后输入reboot重启，OK！ 0x05 完成任务吧！ 作者给的描述是要我们找到靶机里面的5个flag
 Description: There are five flags on this machine. Try to find them.</description>
    </item>
    
    <item>
      <title>用Docker来搭建各种漏洞靶场(妈妈再也不用担心我没有靶场练习了)</title>
      <link>https://getshe11.com/post/use-docker-to-build-a-variety-of-loopholes-my-mother-no-longer-has-to-worry-about-not-having-practiced-in-the-shooting-range/</link>
      <pubDate>Wed, 14 Mar 2018 16:49:17 +0000</pubDate>
      
      <guid>https://getshe11.com/post/use-docker-to-build-a-variety-of-loopholes-my-mother-no-longer-has-to-worry-about-not-having-practiced-in-the-shooting-range/</guid>
      <description>1. 前言 最近练习也在搭建这个漏洞环境，但是很费时间，然后就想到用Docker搭建比较快，又方便。不多废话，直接开始吧！
2. 下载Docker 我本次是利用Windows 10 来安装Docker，因为Windows出现了一个问题需要解决下，Linux和Mac安装官网的安装方法基本没什么问题。
官方下载地址：https://docs.docker.com/docker-for-windows/install/ 安装／升级你的Docker客户端 对于Windows 10以下的用户 推荐使用 Docker Toolbox Toolbox的介绍和帮助：mirrors.aliyun.com/help/docker-toolbox
Windows系统的安装文件目录：http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/
对于Windows 10以上的用户 推荐使用 Docker for Windows Windows系统的安装文件目录：http://mirrors.aliyun.com/docker-toolbox/windows/docker-for-windows/
3. 安装Docker   运行安装文件：   安装完成：   安装完之后会出现一个问题，就是要你开win10里面的Hyper-V，这个功能和VMware是冲突的，所以你开了Hyper-V就不能用VMware了
   开启Hyper-V然后重启就可以使用了。   4. 使用国内的Docker加速器 注册一个阿里云的账号：https://cr.console.aliyun.com/#/accelerator
然后获取专属加速器地址： 在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写加速器地址，如下所示：
{ &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://0sdzi917.mirror.aliyuncs.com&amp;#34;] } 5. 用Docker生成漏洞环境并使用  这里我用Samba远程代码执行漏洞(CVE-2017-7494)来做测试。   2017年5月24日Samba发布了4.6.4版本，中间修复了一个严重的远程代码执行漏洞，漏洞编号CVE-2017-7494，漏洞影响了Samba 3.5.0 之后到4.6.4/4.5.10/4.4.14中间的所有版本。
 获取环境   拉取镜像到本地 docker pull medicean/vulapps:s_samba_1</description>
    </item>
    
    <item>
      <title>DVWA之Brute Force更新</title>
      <link>https://getshe11.com/post/dvwa-brute-force-update-/</link>
      <pubDate>Wed, 28 Feb 2018 00:18:00 +0000</pubDate>
      
      <guid>https://getshe11.com/post/dvwa-brute-force-update-/</guid>
      <description>前言 今天又练习了一遍DVWA，发现了一些小问题。
问题一 在原文http://www.freebuf.com/articles/web/116437.html 中的python代码我重新运行了一遍，发现有错误。提示没有这个&#39;input&#39;的Type,所以我做了下修改就能正常运行了。 原先的user_token = soup.form.input.input.input.input[&amp;quot;value&amp;quot;] 改成了user_token = soup.find_all(&amp;quot;input&amp;quot;)[3].get(&amp;quot;value&amp;quot;)# get the user_token 代码如下：
from bs4 import BeautifulSoup import urllib2 header={ &amp;#39;Host&amp;#39;: &amp;#39;192.168.59.127&amp;#39;, &amp;#39;Cache-Control&amp;#39;: &amp;#39;max-age=0&amp;#39;, &amp;#39;If-None-Match&amp;#39;: &amp;#34;307-52156c6a290c0&amp;#34;, &amp;#39;If-Modified-Since&amp;#39;: &amp;#39;Mon, 05 Oct 2015 07:51:07 GMT&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;*/*&amp;#39;, &amp;#39;Referer&amp;#39;: &amp;#39;http://192.168.59.127/dvwa/vulnerabilities/brute/index.php&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate, sdch&amp;#39;, &amp;#39;Accept-Language&amp;#39;: &amp;#39;zh-CN,zh;q=0.8&amp;#39;, &amp;#39;Cookie&amp;#39;: &amp;#39;security=high; PHPSESSID=4ac4tdpdn25suknveha54ml3i2&amp;#39;} requrl = &amp;#34;http://192.168.59.127/dvwa/vulnerabilities/brute/&amp;#34; def get_token(requrl,header): req = urllib2.Request(url=requrl, headers=header) response = urllib2.</description>
    </item>
    
  </channel>
</rss>
